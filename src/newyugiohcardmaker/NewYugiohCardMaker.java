package newyugiohcardmaker;

import cardproperties.Ability;
import cardproperties.Edition;
import cardproperties.Property;
import cardproperties.Rarity;
import characterLimits.JTextFieldCharacterLimit;
import characterLimits.SerialNumberLimit;
import constants.Scales;
import generators.AnimeCardGenerator;
import generators.CardGenerator;
import generators.RegularCardGenerator;
import listeners.GenerateListener;
import listeners.SerialNumberKeyListener;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class NewYugiohCardMaker extends JFrame {

    private final GenerateListener generateListener = new GenerateListener(this);
    private CardGenerator generator;
    private final RegularCardGenerator regularGenerator;
    private final AnimeCardGenerator animeGenerator;
    private boolean isPendulum;
    private boolean isAnime;
    private boolean isBulletPointMode;
    private static final String KEY_ENTER = "ENTER";

    public NewYugiohCardMaker() throws IOException {
        initComponents();
        regularGenerator = new RegularCardGenerator();
        animeGenerator = new AnimeCardGenerator();
        txtCardID_1.setDocument(new JTextFieldCharacterLimit(4, 4));
        txtCardID_2.setDocument(new JTextFieldCharacterLimit(5, 5));
        txtAtk.setDocument(new JTextFieldCharacterLimit(6, 6));
        txtDef.setDocument(new JTextFieldCharacterLimit(6, 6));
        ((JTextField) cboSerialNumber.getEditor().getEditorComponent()).setDocument(new SerialNumberLimit(8, 0, cboSerialNumber));
        ((JTextField) cboSerialNumber.getEditor().getEditorComponent()).addKeyListener(new SerialNumberKeyListener(cboSerialNumber));
        addAllListeners();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new JPanel();
        jPanel4 = new JPanel();
        btnSave = new JButton();
        btnGenerate = new JButton();
        btnSearch = new JButton();
        btnAnimeStyle = new JButton();
        btnBulletPointMode = new JButton();
        btnPendulumStyle = new JButton();
        jPanel1 = new JPanel();
        jLabel_creator = new JLabel();
        cboSerialNumber = new JComboBox();
        jPanel3 = new JPanel();
        jPanel23 = new JPanel();
        cboCardRarity = new JComboBox();
        cboCirculation = new JComboBox();
        cboCardBase = new JComboBox();
        lblCardBase = new JLabel();
        jPanel9 = new JPanel();
        txtCardID_1 = new JTextField();
        jPanel11 = new JPanel();
        lblCardIDDash = new JLabel();
        jPanel12 = new JPanel();
        txtCardID_2 = new JTextField();
        lblCardID = new JLabel();
        lblName = new JLabel();
        txtName = new JTextField();
        lblPictureURL = new JLabel();
        txtPictureURL = new JTextField();
        jLabel_serialNumber = new JLabel();
        btnUploadPictureURL = new JButton();
        jPanel15 = new JPanel();
        lblCirculation = new JLabel();
        jPanel18 = new JPanel();
        lblCardRarity = new JLabel();
        jPanel29 = new JPanel();
        txtCreator = new JTextField();
        jLabel_year = new JLabel();
        txtYear = new JTextField();
        jTabbedPane2 = new JTabbedPane();
        jPanel27 = new JPanel();
        lblAtkDef = new JLabel();
        jPanel6 = new JPanel();
        tbpMonsterDescription = new JTabbedPane();
        jScrollPane14 = new JScrollPane();
        txtDescription = new JTextArea();
        jScrollPane4 = new JScrollPane();
        txtDisplayableDescription = new JTextArea();
        chkHasEffect = new JCheckBox();
        lblCardDescription1 = new JLabel();
        jPanel20 = new JPanel();
        jPanel14 = new JPanel();
        cboAttribute = new JComboBox();
        lblAttribute = new JLabel();
        cboAbility = new JComboBox();
        lblAbility = new JLabel();
        jPanel16 = new JPanel();
        cboLevel = new JComboBox();
        lblLevel = new JLabel();
        cboMonsterType = new JComboBox();
        lblMonsterType = new JLabel();
        jPanel28 = new JPanel();
        txtAtk = new JTextField();
        jPanel31 = new JPanel();
        lblCardIDDash1 = new JLabel();
        jPanel32 = new JPanel();
        txtDef = new JTextField();
        jPanel30 = new JPanel();
        jPanel10 = new JPanel();
        jTabbedPane5 = new JTabbedPane();
        jScrollPane17 = new JScrollPane();
        txtSpellDescription = new JTextArea();
        jScrollPane7 = new JScrollPane();
        txtTrapDescription = new JTextArea();
        lblCardDescription2 = new JLabel();
        jPanel21 = new JPanel();
        jPanel17 = new JPanel();
        cboPendulumScale = new JComboBox();
        lblPendulumScale = new JLabel();
        jPanel22 = new JPanel();
        cboSpellTrapType = new JComboBox();
        lblSpellTrapType = new JLabel();
        jPanel13 = new JPanel();
        jLabelSearch1 = new JLabel();
        jTextField_search = new JTextField();
        jScrollPane3 = new JScrollPane();
        jTable1 = new JTable();
        jPanelBase = new JPanel();
        Jlabel_card_generate = new JLabel();
        jMenuBar1 = new JMenuBar();
        jMenu1 = new JMenu();
        menuItemSave = new JMenuItem();
        jMenuItem1 = new JMenuItem();
        jMenu2 = new JMenu();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Yugioh Card Maker");
        setBackground(new java.awt.Color(245, 245, 245));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        jPanel4.setForeground(new java.awt.Color(204, 204, 204));
        jPanel4.setPreferredSize(new java.awt.Dimension(35, 190));

        btnSave.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\save.png")); // NOI18N
        btnSave.setToolTipText("Save");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(SwingConstants.CENTER);
        btnSave.setPreferredSize(new java.awt.Dimension(30, 30));
        btnSave.setVerticalTextPosition(SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnGenerate.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\generate.png")); // NOI18N
        btnGenerate.setToolTipText("Generate");
        btnGenerate.setPreferredSize(new java.awt.Dimension(30, 30));
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\search_2.png")); // NOI18N
        btnSearch.setToolTipText("Search");
        btnSearch.setPreferredSize(new java.awt.Dimension(30, 30));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAnimeStyle.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\AnimeStyle.png")); // NOI18N
        btnAnimeStyle.setToolTipText("anime Style");
        btnAnimeStyle.setPreferredSize(new java.awt.Dimension(30, 30));
        btnAnimeStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAnimeStyleActionPerformed(evt);
            }
        });

        btnBulletPointMode.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\bulletPointMode.png")); // NOI18N
        btnBulletPointMode.setToolTipText("Bullet Mode");
        btnBulletPointMode.setPreferredSize(new java.awt.Dimension(30, 30));
        btnBulletPointMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnBulletPointModeActionPerformed(evt);
            }
        });

        btnPendulumStyle.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\pendulumMode.png")); // NOI18N
        btnPendulumStyle.setToolTipText("Pendulum Style");
        btnPendulumStyle.setPreferredSize(new java.awt.Dimension(30, 30));
        btnPendulumStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnPendulumStyleActionPerformed(evt);
            }
        });

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(btnGenerate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(btnBulletPointMode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(btnAnimeStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(btnPendulumStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnGenerate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnBulletPointMode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAnimeStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnPendulumStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(200, 200, 200));
        jPanel1.setBorder(BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel_creator.setText("Creator:");

        cboSerialNumber.setEditable(true);
        cboSerialNumber.setModel(new DefaultComboBoxModel(new String[] { "This card cannot be used in a Duel.", "This card cannot be in a Deck.", "Not usable in Official Duels.", "Not an Official Yu-Gi-Oh! TCG Card." }));
        cboSerialNumber.setSelectedIndex(-1);
        cboSerialNumber.setSelectedItem("");
        cboSerialNumber.setPreferredSize(new java.awt.Dimension(196, 19));

//        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel23.setBackground(new java.awt.Color(200, 200, 200));

        cboCardRarity.setModel(new DefaultComboBoxModel(Rarity.values()));
        cboCardRarity.setPreferredSize(new java.awt.Dimension(90, 19));

        cboCirculation.setEditable(true);
        cboCirculation.setModel(new DefaultComboBoxModel(Edition.values()));
        cboCirculation.setPreferredSize(new java.awt.Dimension(90, 19));

        cboCardBase.setModel(new DefaultComboBoxModel(new String[] { "Normal", "Effect", "Fusion", "Ritual", "Spell", "Trap", "Synchro", "Dark Synchro", "Xyz", "Token", "Egyptian God Red", "Egyptian God Blue", "Egyptian God Yellow", "Sacred Beast Red", "Sacred Beast Blue", "Sacred Beast Yellow", "Wicked God" }));
        cboCardBase.setPreferredSize(new java.awt.Dimension(122, 19));
        cboCardBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cboCardBaseActionPerformed(evt);
            }
        });

        lblCardBase.setText("Card Frame:");

        jPanel9.setBackground(new java.awt.Color(200, 200, 200));
        jPanel9.setLayout(new BoxLayout(jPanel9, BoxLayout.LINE_AXIS));

        txtCardID_1.setToolTipText("");
        jPanel9.add(txtCardID_1);

        jPanel11.setBackground(new java.awt.Color(200, 200, 200));
        jPanel11.setPreferredSize(new java.awt.Dimension(4, 18));

        GroupLayout jPanel11Layout = new GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel11);

        lblCardIDDash.setText("-");
        jPanel9.add(lblCardIDDash);

        jPanel12.setBackground(new java.awt.Color(200, 200, 200));
        jPanel12.setPreferredSize(new java.awt.Dimension(4, 18));

        GroupLayout jPanel12Layout = new GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel12);

        txtCardID_2.setToolTipText("");
        jPanel9.add(txtCardID_2);

        lblCardID.setText("Card ID:");

        GroupLayout jPanel23Layout = new GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cboCardRarity, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboCirculation, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblCardID)
                    .addComponent(lblCardBase))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(cboCardBase, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel23Layout.linkSize(SwingConstants.HORIZONTAL, new java.awt.Component[] {cboCardBase, cboCardRarity, cboCirculation, jPanel9});

        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(cboCardRarity, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCardBase)
                    .addComponent(cboCardBase, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel23Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(cboCirculation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(lblCardID))
        );

        lblName.setText("Name:");

        txtName.setToolTipText("");
        txtName.setMaximumSize(new java.awt.Dimension(410, 20));
        txtName.setMinimumSize(new java.awt.Dimension(410, 20));
        txtName.setPreferredSize(new java.awt.Dimension(410, 20));

        lblPictureURL.setText("Picture URL:");

        txtPictureURL.setToolTipText("");
        txtPictureURL.setMaximumSize(new java.awt.Dimension(410, 20));
        txtPictureURL.setMinimumSize(new java.awt.Dimension(410, 20));
        txtPictureURL.setPreferredSize(new java.awt.Dimension(410, 20));

        jLabel_serialNumber.setText("Serial Number:");

        btnUploadPictureURL.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\icons\\upload.png")); // NOI18N
        btnUploadPictureURL.setToolTipText("Upload");
        btnUploadPictureURL.setMaximumSize(new java.awt.Dimension(28, 28));
        btnUploadPictureURL.setMinimumSize(new java.awt.Dimension(28, 28));
        btnUploadPictureURL.setPreferredSize(new java.awt.Dimension(28, 28));
        btnUploadPictureURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnUploadPictureURLActionPerformed(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(200, 200, 200));

        lblCirculation.setText("Circulation:");

        GroupLayout jPanel15Layout = new GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(lblCirculation)
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(lblCirculation, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        jPanel18.setBackground(new java.awt.Color(200, 200, 200));

        lblCardRarity.setText("Card Rarity:");

        GroupLayout jPanel18Layout = new GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(lblCardRarity)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCardRarity, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        );

        jPanel29.setBackground(new java.awt.Color(200, 200, 200));

        jLabel_year.setText("Year:");

        GroupLayout jPanel29Layout = new GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addComponent(txtCreator)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_year)
                .addGap(33, 33, 33)
                .addComponent(txtYear))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                .addComponent(txtCreator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel_year)
                .addComponent(txtYear, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        jPanel27.setBackground(new java.awt.Color(220, 220, 220));

        lblAtkDef.setText("ATK/DEF:");

        txtDescription.setColumns(20);
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.setWrapStyleWord(true);
        jScrollPane14.setViewportView(txtDescription);

        tbpMonsterDescription.addTab("Effect", jScrollPane14);

        txtDisplayableDescription.setColumns(20);
        txtDisplayableDescription.setRows(5);
        jScrollPane4.setViewportView(txtDisplayableDescription);

        tbpMonsterDescription.addTab("Displayable", jScrollPane4);

        chkHasEffect.setText("Has Effect");

        lblCardDescription1.setText("Card Description:");

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblCardDescription1)
                    .addComponent(chkHasEffect))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpMonsterDescription, GroupLayout.PREFERRED_SIZE, 410, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(tbpMonsterDescription, GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblCardDescription1)
                        .addGap(18, 18, 18)
                        .addComponent(chkHasEffect)))
                .addContainerGap())
        );

        jPanel20.setBackground(new java.awt.Color(220, 220, 220));

        jPanel14.setBackground(new java.awt.Color(220, 220, 220));

        cboAttribute.setModel(new DefaultComboBoxModel(new String[] { "Light", "Dark", "Fire", "Water", "Wind", "Earth", "Divine", "Dark Divine", "Spell", "Trap", "Trap Spell", "Laugh" }));
        cboAttribute.setPreferredSize(new java.awt.Dimension(37, 19));

        lblAttribute.setText("Attribute:");

        cboAbility.setModel(new DefaultComboBoxModel(new String[] { "None", "Flip", "Toon", "Union", "Spirit", "Gemini", "Tuner", "Dark Tuner" }));
        cboAbility.setPreferredSize(new java.awt.Dimension(37, 19));

        lblAbility.setText("Ability:");

        GroupLayout jPanel14Layout = new GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(lblAttribute)
                        .addGap(4, 4, 4))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(lblAbility)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cboAbility, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAttribute, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblAttribute))
                    .addComponent(cboAttribute, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboAbility, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAbility)))
        );

        jPanel16.setBackground(new java.awt.Color(220, 220, 220));

        cboLevel.setModel(new DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" }));
        cboLevel.setPreferredSize(new java.awt.Dimension(37, 19));

        lblLevel.setText("Level:");

        cboMonsterType.setEditable(true);
        cboMonsterType.setModel(new DefaultComboBoxModel(new String[] { "Spellcaster", "Divine-Beast", "Dinosaur", "Dragon", "Fiend", "Fish", "Warrior", "Pyro", "Reptile", "Psychic", "Thunder" }));
        cboMonsterType.setPreferredSize(new java.awt.Dimension(37, 19));

        lblMonsterType.setText("Monster Type:");

        GroupLayout jPanel16Layout = new GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblMonsterType)
                    .addComponent(lblLevel))
                .addGap(19, 19, 19)
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cboLevel, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonsterType, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLevel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel))
                .addGap(6, 6, 6)
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboMonsterType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMonsterType)))
        );

        GroupLayout jPanel20Layout = new GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel16, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jPanel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                .addComponent(jPanel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel16, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        jPanel28.setBackground(new java.awt.Color(200, 200, 200));
        jPanel28.setLayout(new BoxLayout(jPanel28, BoxLayout.LINE_AXIS));

        txtAtk.setToolTipText("");
        jPanel28.add(txtAtk);

        jPanel31.setBackground(new java.awt.Color(200, 200, 200));
        jPanel31.setPreferredSize(new java.awt.Dimension(4, 18));

        GroupLayout jPanel31Layout = new GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel28.add(jPanel31);

        lblCardIDDash1.setText("/");
        jPanel28.add(lblCardIDDash1);

        jPanel32.setBackground(new java.awt.Color(200, 200, 200));
        jPanel32.setPreferredSize(new java.awt.Dimension(4, 18));

        GroupLayout jPanel32Layout = new GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel28.add(jPanel32);

        txtDef.setToolTipText("");
        jPanel28.add(txtDef);

        GroupLayout jPanel27Layout = new GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAtkDef)
                .addGap(18, 18, 18)
                .addComponent(jPanel28, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addComponent(jPanel20, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jPanel20, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(lblAtkDef)
                    .addComponent(jPanel28, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Monster", jPanel27);

        jPanel30.setBackground(new java.awt.Color(220, 220, 220));

        txtSpellDescription.setColumns(20);
        txtSpellDescription.setLineWrap(true);
        txtSpellDescription.setRows(5);
        txtSpellDescription.setWrapStyleWord(true);
        jScrollPane17.setViewportView(txtSpellDescription);

        jTabbedPane5.addTab("Spell", jScrollPane17);

        txtTrapDescription.setColumns(20);
        txtTrapDescription.setRows(5);
        jScrollPane7.setViewportView(txtTrapDescription);

        jTabbedPane5.addTab("Trap", jScrollPane7);

        lblCardDescription2.setText("Card Description:");

        GroupLayout jPanel10Layout = new GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCardDescription2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane5, GroupLayout.PREFERRED_SIZE, 410, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane5, GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblCardDescription2)))
                .addContainerGap())
        );

        jPanel21.setBackground(new java.awt.Color(220, 220, 220));

        jPanel17.setBackground(new java.awt.Color(220, 220, 220));

        cboPendulumScale.setModel(new DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" }));
        cboPendulumScale.setPreferredSize(new java.awt.Dimension(37, 19));

        lblPendulumScale.setText("Pendulum Scale:");

        GroupLayout jPanel17Layout = new GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(lblPendulumScale)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboPendulumScale, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel17Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(cboPendulumScale, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPendulumScale)))
        );

        jPanel22.setBackground(new java.awt.Color(220, 220, 220));

        cboSpellTrapType.setModel(new DefaultComboBoxModel(new String[] { "Normal", "Continuous", "Counter", "Equip", "Field", "Quick-Play", "Ritual" }));
        cboSpellTrapType.setPreferredSize(new java.awt.Dimension(37, 19));

        lblSpellTrapType.setText("Spell Type:");

        GroupLayout jPanel22Layout = new GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSpellTrapType)
                .addGap(38, 38, 38)
                .addComponent(cboSpellTrapType, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel22Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSpellTrapType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSpellTrapType)))
        );

        GroupLayout jPanel21Layout = new GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jPanel22, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel17, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                .addComponent(jPanel17, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel22, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        GroupLayout jPanel30Layout = new GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addComponent(jPanel21, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Spell", jPanel30);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblPictureURL)
                    .addComponent(lblName)
                    .addComponent(jPanel18, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_serialNumber)
                    .addComponent(jLabel_creator))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboSerialNumber, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPictureURL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUploadPictureURL, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPictureURL)
                        .addComponent(txtPictureURL, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUploadPictureURL, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel18, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jPanel15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel23, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_serialNumber)
                    .addComponent(cboSerialNumber, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_creator, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel29, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        jPanel13.setBackground(new java.awt.Color(200, 200, 200));
        jPanel13.setBorder(BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabelSearch1.setText("Search:");

        jTextField_search.setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Name", "Attribute", "Monster Type"
            }
        ) {
            Class[] types = new Class [] {
                String.class, String.class, String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setMaximumSize(new java.awt.Dimension(45, 17));
        jTable1.setMinimumSize(new java.awt.Dimension(45, 17));
        jTable1.setPreferredSize(new java.awt.Dimension(45, 17));
        jTable1.setRowHeight(17);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(jTable1);

        GroupLayout jPanel13Layout = new GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSearch1)
                .addGap(18, 18, 18)
                .addComponent(jTextField_search)
                .addContainerGap())
            .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSearch1)
                    .addComponent(jTextField_search, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelBase.setBackground(new java.awt.Color(233, 233, 255));
        jPanelBase.setBorder(BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(240, 240, 240))); // NOI18N
        jPanelBase.setForeground(new java.awt.Color(233, 233, 255));
        jPanelBase.setToolTipText("");

        Jlabel_card_generate.setBackground(new java.awt.Color(255, 255, 255));
        Jlabel_card_generate.setIcon(new ImageIcon("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\card_features\\backings\\default_backing.png")); // NOI18N
        Jlabel_card_generate.setMaximumSize(new java.awt.Dimension(1000, 1000));
        Jlabel_card_generate.setMinimumSize(new java.awt.Dimension(351, 511));
        Jlabel_card_generate.setPreferredSize(new java.awt.Dimension(351, 513));
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File("C:\\java\\java\\java\\NewYugiohCardMaker\\resources\\read_only\\card_features\\backings\\default_backing.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance((int) Jlabel_card_generate.getPreferredSize().getWidth(), (int) Jlabel_card_generate.getPreferredSize().getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        Jlabel_card_generate.setIcon(imageIcon);

        GroupLayout jPanelBaseLayout = new GroupLayout(jPanelBase);
        jPanelBase.setLayout(jPanelBaseLayout);
        jPanelBaseLayout.setHorizontalGroup(
            jPanelBaseLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jlabel_card_generate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelBaseLayout.setVerticalGroup(
            jPanelBaseLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanelBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jlabel_card_generate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout jPanel8Layout = new GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelBase, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelBase, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addComponent(jPanel13, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        jMenu1.setText("File");

        menuItemSave.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSave.setText("Save");
        jMenu1.add(menuItemSave);

        jMenuItem1.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Generate");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtName.getText().isEmpty()) {
            alert("you have not input a name");
        }
        else {
            try {
                generator.saveCard(txtName.getText());
            }
            catch (IOException ex) {
                Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        generateListener.setActive(false);
        Connection conn = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection("jdbc:sqlserver://127.0.0.1\\AD-DE64:1433;databaseName=yugiohDB;user=yugi;password=muto");
        }
        catch (ClassNotFoundException | SQLException ex) {
            alert("not connecting, here it is: " + ex.getMessage() + "/" + ex.getClass());
        }
        try {
            String card_name = jTextField_search.getText().toLowerCase().replace(' ', '_');
            ResultSet rs = conn.createStatement().executeQuery("select * from [dbo].[test_monsters] where [image_path] = '" + card_name + ".png'");
            rs.next();

            txtName.setText(rs.getString("name"));
            cboAttribute.setSelectedItem(rs.getString("attribute"));
            cboLevel.setSelectedItem(rs.getString("level"));
            cboAbility.setSelectedItem(rs.getString("ability"));
            txtCardID_1.setText(rs.getString("card_id").split("-")[0]);
            txtCardID_2.setText(rs.getString("card_id").split("-")[1]);
            txtPictureURL.setText(rs.getString("image_path"));
            txtDescription.setText(rs.getString("description"));
            cboSerialNumber.setSelectedItem(rs.getString("serial_number"));
            txtAtk.setText(rs.getString("atk"));
            txtDef.setText(rs.getString("def"));
            txtCreator.setText("KAZUKI TAKAHASHI");
            txtYear.setText("1996");
            cboMonsterType.setSelectedItem(rs.getString("species"));
            cboCardBase.setSelectedItem(rs.getString("category"));

            generateListener.setActive(true);
            conn.close();
            rs.close();
        }
        catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnGenerateActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        try {
            generate();
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnUploadPictureURLActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnUploadPictureURLActionPerformed
        JFileChooser chooser = new JFileChooser(new File("resources\\read_only\\images")); //Downloads Directory as default
        FileNameExtensionFilter filter = new FileNameExtensionFilter("png images", "png");
        int returnVal = chooser.showOpenDialog(this);
        chooser.setFileFilter(filter);
        chooser.setFileView(new ImageFileView());
        chooser.setDialogTitle("Select Location");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String image_path = chooser.getSelectedFile().getName();
            try {
                regularGenerator.setPicture(image_path, Scales.PICTURE);
                regularGenerator.setPendulumPicture(image_path, Scales.PENDULUM_PICTURE);
                animeGenerator.setPicture(image_path, Scales.PICTURE_ANIME_Y, Scales.PICTURE_ANIME_Y);
            }
            catch (IOException ex) {
                Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtPictureURL.setText(image_path);
        }
    }//GEN-LAST:event_btnUploadPictureURLActionPerformed

    private void cboCardBaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cboCardBaseActionPerformed
        generateListener.setActive(false);

        String card_type = "monster";
        String category = cboCardBase.getSelectedItem().toString();

        if (category.equals("Spell") || category.equals("Trap")) {
            card_type = "non_monster";
        }

        switch (card_type) {
            case "monster":
                switch (category) {
                    case "Normal":
                        if (chkHasEffect.isSelected()) {
                            chkHasEffect.setSelected(false);
                        }
                        chkHasEffect.setEnabled(false);
                        break;
                    case "Effect":
                        if (!chkHasEffect.isSelected()) {
                            chkHasEffect.setSelected(true);
                        }
                        chkHasEffect.setEnabled(false);
                        break;
                    default:
                        chkHasEffect.setEnabled(true);
                        break;
                }
                if (!cboSpellTrapType.getSelectedItem().equals("Normal")) {
                    cboSpellTrapType.setSelectedItem("Normal");
                }
                cboSpellTrapType.setEnabled(false);
                cboAbility.setEnabled(true);
                cboAttribute.setEnabled(true);
                cboLevel.setEnabled(true);
                txtAtk.setEnabled(true);
                txtDef.setEnabled(true);
                cboMonsterType.setEnabled(true);
                break;
            case "non_monster":
                switch (category) {
                    case "Spell":
                        cboSpellTrapType.setModel(new DefaultComboBoxModel<>(Property.getSpellProperties()));
                        break;
                    case "Trap":
                        cboSpellTrapType.setModel(new DefaultComboBoxModel<>(Property.getTrapProperties()));
                        break;
                    default:
                        break;
                }
                cboSpellTrapType.setEnabled(true);
                if (!chkHasEffect.isSelected()) {
                    chkHasEffect.setSelected(true);
                }
                chkHasEffect.setEnabled(false);
                cboAbility.setEnabled(false);
                cboAttribute.setEnabled(false);
                cboLevel.setEnabled(false);
                txtAtk.setEnabled(false);
                txtDef.setEnabled(false);
                cboMonsterType.setEnabled(false);
                cboAttribute.setSelectedItem(cboCardBase.getSelectedItem());
                break;
        }
        generateListener.setActive(true);
        try {
            generate();
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboCardBaseActionPerformed

    private void btnBulletPointModeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnBulletPointModeActionPerformed
        isBulletPointMode = !isBulletPointMode;
        setTextAreaMode();
        txtDescription.requestFocus();
    }//GEN-LAST:event_btnBulletPointModeActionPerformed

    private void btnAnimeStyleActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAnimeStyleActionPerformed
        isAnime = !isAnime;
        if (isAnime) {
            generator = animeGenerator;
        }
        else {
            generator = regularGenerator;
        }
        try {
            generate();
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnimeStyleActionPerformed

    private void btnPendulumStyleActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnPendulumStyleActionPerformed
        isPendulum = !isPendulum;
        animeGenerator.setIsPendulum(isPendulum);
        regularGenerator.setIsPendulum(isPendulum);
        try {
            generate();
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPendulumStyleActionPerformed

    private void jMenuItem1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            generate();
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void setGenerator() {
        if (isAnime) {
            generator = animeGenerator;
        }
        else {
            generator = regularGenerator;
        }
    }

    public void generate() throws IOException {
        Card card = new Card();
        setCardValues(card);

        setGenerator();
        try {
            BufferedImage card_image = generator.generate(card);
            Image scaled_card_image = card_image.getScaledInstance(Jlabel_card_generate.getWidth(), Jlabel_card_generate.getHeight(), Image.SCALE_SMOOTH);

            ImageIcon icon = new ImageIcon(scaled_card_image);
//            ImageIcon icon = new ImageIcon(card_image);
            Jlabel_card_generate.setIcon(icon);
        }
        catch (IOException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setCardValues(Card card) {
        card.setLevel(Integer.parseInt(cboLevel.getSelectedItem().toString()));
        card.setFrame(cboCardBase.getSelectedItem().toString());
        card.setName(txtName.getText());
        card.setAttributeType(cboAttribute.getSelectedItem().toString());
        card.setImagePath(txtPictureURL.getText());
        card.setSerialNumber((String) cboSerialNumber.getSelectedItem());
        card.setRarity(cboCardRarity.getSelectedItem().toString());
        card.setDescription(txtDescription.getText());
        card.setAtk(txtAtk.getText());
        card.setDef(txtDef.getText());
        card.setCardID(txtCardID_1.getText() + "-" + txtCardID_2.getText());
        card.setMonsterType(cboMonsterType.getSelectedItem().toString());
        card.setAbility(cboAbility.getSelectedItem().toString());
        card.setType(cboCardBase.getSelectedItem().toString());
        card.setHasEffect(chkHasEffect.isSelected());
        card.setPendulumScale(Integer.parseInt(cboPendulumScale.getSelectedItem().toString()));
        card.setPendulumDescription(txtSpellDescription.getText());
        card.setSpellTrapProperty(cboSpellTrapType.getSelectedItem().toString());
        card.setYear(txtYear.getText());
        card.setCreator(txtCreator.getText());
        card.setEdition(cboCirculation.getSelectedItem().toString());
    }

    private void addAllListeners() {
        cboLevel.addItemListener(generateListener);
        cboAttribute.addItemListener(generateListener);
        cboCardRarity.addItemListener(generateListener);
        cboAbility.addItemListener(generateListener);
        cboPendulumScale.addItemListener(generateListener);
        cboSpellTrapType.addItemListener(generateListener);
        txtDescription.getDocument().addDocumentListener(generateListener);
        chkHasEffect.addItemListener(generateListener);
        chkHasEffect.addChangeListener(e -> {
            if (chkHasEffect.isSelected()) {
                cboAbility.setModel(new DefaultComboBoxModel<>(Ability.getEffect()));
            } else {
                cboAbility.setModel(new DefaultComboBoxModel<>(Ability.getNonEffect()));
            }
        });
    }

    private void removeAllListeners() {
        cboLevel.removeItemListener(generateListener);
        cboAttribute.removeItemListener(generateListener);
        cboCardRarity.removeItemListener(generateListener);
        cboAbility.removeItemListener(generateListener);
        chkHasEffect.removeItemListener(generateListener);
    }

    private void setTextAreaMode() {
        if (isBulletPointMode) {
            setBulletPointMode();
        }
        else {
            setNonBulletPointMode();
        }
    }

    private void setBulletPointMode() {
        Action action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                txtDescription.insert("\n\u25cf ", txtDescription.getCaretPosition());
            }
        };
        KeyStroke keyStroke = KeyStroke.getKeyStroke(KEY_ENTER);
        txtDescription.getInputMap().put(keyStroke, KEY_ENTER);
        txtDescription.getActionMap().put(KEY_ENTER, action);
    }

    private void setNonBulletPointMode() {
        Action action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                txtDescription.insert("\n", txtDescription.getCaretPosition());
            }
        };
        KeyStroke keyStroke = KeyStroke.getKeyStroke(KEY_ENTER);
        txtDescription.getInputMap().put(keyStroke, KEY_ENTER);
        txtDescription.getActionMap().put(KEY_ENTER, action);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("ClassicWindows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new NewYugiohCardMaker().setVisible(true);
                }
                catch (IOException ex) {
                    Logger.getLogger(NewYugiohCardMaker.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void alert(String s) {
        JOptionPane.showMessageDialog(this, s, "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel Jlabel_card_generate;
    private JButton btnAnimeStyle;
    private JButton btnBulletPointMode;
    private JButton btnGenerate;
    private JButton btnPendulumStyle;
    private JButton btnSave;
    private JButton btnSearch;
    private JButton btnUploadPictureURL;
    private JComboBox<Ability> cboAbility;
    private JComboBox cboAttribute;
    private JComboBox cboCardBase;
    private JComboBox cboCardRarity;
    private JComboBox cboCirculation;
    private JComboBox cboLevel;
    private JComboBox cboMonsterType;
    private JComboBox cboPendulumScale;
    private JComboBox cboSerialNumber;
    private JComboBox cboSpellTrapType;
    private JCheckBox chkHasEffect;
    private JLabel jLabelSearch1;
    private JLabel jLabel_creator;
    private JLabel jLabel_serialNumber;
    private JLabel jLabel_year;
    private JMenu jMenu1;
    private JMenu jMenu2;
    private JMenuBar jMenuBar1;
    private JMenuItem jMenuItem1;
    private JPanel jPanel1;
    private JPanel jPanel10;
    private JPanel jPanel11;
    private JPanel jPanel12;
    private JPanel jPanel13;
    private JPanel jPanel14;
    private JPanel jPanel15;
    private JPanel jPanel16;
    private JPanel jPanel17;
    private JPanel jPanel18;
    private JPanel jPanel20;
    private JPanel jPanel21;
    private JPanel jPanel22;
    private JPanel jPanel23;
    private JPanel jPanel27;
    private JPanel jPanel28;
    private JPanel jPanel29;
    private JPanel jPanel3;
    private JPanel jPanel30;
    private JPanel jPanel31;
    private JPanel jPanel32;
    private JPanel jPanel4;
    private JPanel jPanel6;
    private JPanel jPanel8;
    private JPanel jPanel9;
    private JPanel jPanelBase;
    private JScrollPane jScrollPane14;
    private JScrollPane jScrollPane17;
    private JScrollPane jScrollPane3;
    private JScrollPane jScrollPane4;
    private JScrollPane jScrollPane7;
    private JTabbedPane jTabbedPane2;
    private JTabbedPane jTabbedPane5;
    private JTable jTable1;
    private JTextField jTextField_search;
    private JLabel lblAbility;
    private JLabel lblAtkDef;
    private JLabel lblAttribute;
    private JLabel lblCardBase;
    private JLabel lblCardDescription1;
    private JLabel lblCardDescription2;
    private JLabel lblCardID;
    private JLabel lblCardIDDash;
    private JLabel lblCardIDDash1;
    private JLabel lblCardRarity;
    private JLabel lblCirculation;
    private JLabel lblLevel;
    private JLabel lblMonsterType;
    private JLabel lblName;
    private JLabel lblPendulumScale;
    private JLabel lblPictureURL;
    private JLabel lblSpellTrapType;
    private JMenuItem menuItemSave;
    private JTabbedPane tbpMonsterDescription;
    private JTextField txtAtk;
    private JTextField txtCardID_1;
    private JTextField txtCardID_2;
    private JTextField txtCreator;
    private JTextField txtDef;
    private JTextArea txtDescription;
    private JTextArea txtDisplayableDescription;
    private JTextField txtName;
    private JTextField txtPictureURL;
    private JTextArea txtSpellDescription;
    private JTextArea txtTrapDescription;
    private JTextField txtYear;
    // End of variables declaration//GEN-END:variables

}
